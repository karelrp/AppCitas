/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto_tap;

import com.google.gson.Gson;

import hola.Cita;
import hola.DBManager;
import hola.Persona;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.Month;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.json.simple.JSONArray;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author whois
 */
public class IniciarsesionFrame extends javax.swing.JFrame {
    private DBManager db = new DBManager();
    private ArrayList<Personaa> listPersonas = new ArrayList<>();
    private ArrayList<Citaa> citasReservadas = new ArrayList<>();
    
  /* private Persona usuario = new Persona("mar", "a", "mar", "mar", true, false);
    private Persona usuario1 = new Persona("kenia", "a", "k", "k", false, false);
    private Persona usuario2 = new Persona("j", "a", "k", "j", false, true);
    Cita cita = new Cita(500, usuario, usuario1, "" + LocalDateTime.of(2024, 05, 30, 11, 00, 00), 0);
    Cita cita1 = new Cita(500, usuario, usuario1, "" + LocalDateTime.of(2024, 05, 02, 11, 00, 00), 500);
    Cita cita2 = new Cita(500, usuario, usuario1, "" + LocalDateTime.of(2024, 05, 01, 11, 00, 00), 0);
    Cita cita4 = new Cita(500, usuario, usuario1, "" + LocalDateTime.of(2024, 05, 29, 11, 00, 00), 500);
    Cita cita3 = new Cita(500, usuario, usuario2, "" + LocalDateTime.of(2024, 05, 03, 11, 00, 00), 0);
*/
    //private Pers-ona
    //private Pers-ona*/
    public IniciarsesionFrame() {
        initComponents();
       /* cita.setPrecio(usuario.getCostoConsulta());
        cita1.setPrecio(usuario.getCostoConsulta());
       cita2.setPrecio(usuario.getCostoConsulta());
        cita3.setPrecio(usuario.getCostoConsulta());
       cita4.setPrecio(usuario.getCostoConsulta());
        cita4.setCitaPagada(true);
        cita1.setCitaPagada(true);
        listPersonas.add(usuario);
        listPersonas.add(usuario1);
        listPersonas.add(usuario2);
        citasReservadas.add(cita);
        citasReservadas.add(cita1);
        citasReservadas.add(cita2);
        citasReservadas.add(cita3);
        citasReservadas.add(cita4);
     */
       
        usuarioField.setText("");
        contraField.setText("");

        this.setLocationRelativeTo(null);

        //JFrame IniciarsesionFrame = new JFrame();

        //IniciarsesionFrame.repaint();
        getContentPane().setBackground(Color.WHITE);
        //System.out.println("doctor: " + usuario.getNombre() + " y su numero de citas son: " + citasReservadas.size());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        panelImage4 = new org.edisoncor.gui.panel.PanelImage();
        panelImage2 = new org.edisoncor.gui.panel.PanelImage();
        contraField = new javax.swing.JPasswordField();
        entrarButton = new org.edisoncor.gui.panel.PanelImage();
        jLabel4 = new javax.swing.JLabel();
        panelImage1 = new org.edisoncor.gui.panel.PanelImage();
        usuarioField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        panelImage3 = new org.edisoncor.gui.panel.PanelImage();
        jLabel3 = new javax.swing.JLabel();
        regisButton = new org.edisoncor.gui.panel.Panel();
        jLabel5 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        panelImage4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/contenedorLogin.png"))); // NOI18N

        panelImage2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fieldBlanco.png"))); // NOI18N
        panelImage2.setPreferredSize(new java.awt.Dimension(368, 42));

        contraField.setBorder(null);

        javax.swing.GroupLayout panelImage2Layout = new javax.swing.GroupLayout(panelImage2);
        panelImage2.setLayout(panelImage2Layout);
        panelImage2Layout.setHorizontalGroup(
            panelImage2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImage2Layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addComponent(contraField, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelImage2Layout.setVerticalGroup(
            panelImage2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImage2Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(contraField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        entrarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BtnEntrarLogin.png"))); // NOI18N
        entrarButton.setPreferredSize(new java.awt.Dimension(368, 38));
        entrarButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                entrarButtonMouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setText("Iniciar Sesion");

        javax.swing.GroupLayout entrarButtonLayout = new javax.swing.GroupLayout(entrarButton);
        entrarButton.setLayout(entrarButtonLayout);
        entrarButtonLayout.setHorizontalGroup(
            entrarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, entrarButtonLayout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(125, 125, 125))
        );
        entrarButtonLayout.setVerticalGroup(
            entrarButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, entrarButtonLayout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap())
        );

        panelImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fieldBlanco.png"))); // NOI18N
        panelImage1.setPreferredSize(new java.awt.Dimension(368, 42));

        usuarioField.setBorder(null);

        javax.swing.GroupLayout panelImage1Layout = new javax.swing.GroupLayout(panelImage1);
        panelImage1.setLayout(panelImage1Layout);
        panelImage1Layout.setHorizontalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usuarioField, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelImage1Layout.setVerticalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usuarioField, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(55, 65, 81));
        jLabel1.setText("Usuario");

        panelImage3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/HeadingLogin.png"))); // NOI18N
        panelImage3.setPreferredSize(new java.awt.Dimension(190, 53));

        javax.swing.GroupLayout panelImage3Layout = new javax.swing.GroupLayout(panelImage3);
        panelImage3.setLayout(panelImage3Layout);
        panelImage3Layout.setHorizontalGroup(
            panelImage3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 190, Short.MAX_VALUE)
        );
        panelImage3Layout.setVerticalGroup(
            panelImage3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(55, 65, 81));
        jLabel3.setText("Contrase√±a:");

        regisButton.setBackground(java.awt.Color.white);
        regisButton.setColorPrimario(java.awt.Color.white);
        regisButton.setColorSecundario(java.awt.Color.white);

        jLabel5.setForeground(new java.awt.Color(37, 99, 235));
        jLabel5.setText("Registrar nuevo usuario");

        javax.swing.GroupLayout regisButtonLayout = new javax.swing.GroupLayout(regisButton);
        regisButton.setLayout(regisButtonLayout);
        regisButtonLayout.setHorizontalGroup(
            regisButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(regisButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        regisButtonLayout.setVerticalGroup(
            regisButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, regisButtonLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5))
        );

        javax.swing.GroupLayout panelImage4Layout = new javax.swing.GroupLayout(panelImage4);
        panelImage4.setLayout(panelImage4Layout);
        panelImage4Layout.setHorizontalGroup(
            panelImage4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage4Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(panelImage4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelImage2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(entrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(panelImage1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelImage4Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(panelImage3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelImage4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(regisButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(164, 164, 164))
        );
        panelImage4Layout.setVerticalGroup(
            panelImage4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImage4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(panelImage3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelImage1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelImage2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(entrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(regisButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(panelImage4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(panelImage4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inicioSesion(Personaa persona) {
        String u = persona.getUsuario();
        
        try {
            //listPersonas = db.llenar();
            for (int i = 0; i < listPersonas.size(); i++) {
                if (u.equals(listPersonas.get(i).getUsuario())) {
                    persona = listPersonas.get(i);
                    System.out.println("contrase√±a: "+persona.getContrasena());
                    if (persona.isBloqueado()) {
                            System.out.println("entr√≥");
                            JOptionPane.showMessageDialog(null, "LA CUENTA SE ENCUENTRA BLOQUEADA. COMUN√çQUESE CON UN ADMINISTRADOR");
                            break;
                        } else if (persona.isDoctor()) {
                            System.out.println("citas: "+citasReservadas.size());
                        new EspecialistaFrame(persona, i, listPersonas, citasReservadas).setVisible(true);
                        System.out.println("fin");
                        usuarioField.setText("");
                        contraField.setText("");
                        break;
                        //this.hide();
                    } else {
                        new ClienteFrame(persona, i, listPersonas, citasReservadas).setVisible(true);
                        System.out.println("fin");
                        usuarioField.setText("");
                        contraField.setText("");
                        break;
                        //this.hide();
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error");
        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       /*
        String rutaCarpeta = "C:\\Users\\whois\\OneDrive\\Documentos\\json";

        try {
            // Leer datos del archivo "personas.json"
            BufferedReader brPersonas = new BufferedReader(
                    new FileReader(rutaCarpeta + "\\personas.json")
            );
            String lecturaPersonas = null;
            String resultadoPersonas = "";
            while ((lecturaPersonas = brPersonas.readLine()) != null) {
                resultadoPersonas += lecturaPersonas;
            }
            brPersonas.close();

            // Procesar datos del archivo "personas.json"
            JSONParser parserPersonas = new JSONParser();
            JSONArray jsonArrayPersonas = (JSONArray) parserPersonas.parse(resultadoPersonas);
            listPersonas.clear();
            for (int i = 0; i < jsonArrayPersonas.size(); i++) {
                Persona user = new Gson().fromJson(
                        jsonArrayPersonas.get(i).toString(), Persona.class
                );
                listPersonas.add(user);
            }
            System.out.println("Datos de personas le√≠dos correctamente.");

            // Leer datos del archivo "citas.json"
            BufferedReader brCitas = new BufferedReader(
                    new FileReader(rutaCarpeta + "\\citas.json")
            );
            String lecturaCitas = null;
            String resultadoCitas = "";
            while ((lecturaCitas = brCitas.readLine()) != null) {
                resultadoCitas += lecturaCitas;
            }
            brCitas.close();

            // Procesar datos del archivo "citas.json"
            JSONParser parserCitas = new JSONParser();
            JSONArray jsonArrayCitas = (JSONArray) parserCitas.parse(resultadoCitas);
            citasReservadas.clear();
            for (int i = 0; i < jsonArrayCitas.size(); i++) {
                // Suponiendo que las citas est√°n representadas por una clase llamada "Cita"
                Cita cita = new Gson().fromJson(
                        jsonArrayCitas.get(i).toString(), Cita.class
                );
                citasReservadas.add(cita);
            }
            System.out.println("Datos de citas le√≠dos correctamente.");
        } catch (Exception e) {
            e.printStackTrace();
        }*/
        try {
            listPersonas = db.llenarP(citasReservadas);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        /*try {
            // Guardar listPersonas en personas.json
            BufferedWriter bwPersonas = new BufferedWriter(
                    new FileWriter("C:\\Users\\whois\\OneDrive\\Documentos\\json\\personas.json", false)
            );
            String jsonPersonas = new Gson().toJson(listPersonas);
            bwPersonas.write(jsonPersonas);
            bwPersonas.close();
            System.out.println("ListPersonas guardado en personas.json");

            // Guardar citasReservadas en citas.json
            BufferedWriter bwCitas = new BufferedWriter(
                    new FileWriter("C:\\Users\\whois\\OneDrive\\Documentos\\json\\citas.json", false)
            );
            String jsonCitas = new Gson().toJson(citasReservadas);
            bwCitas.write(jsonCitas);
            bwCitas.close();
            System.out.println("CitasReservadas guardado en citas.json");
        } catch (Exception e) {
            e.printStackTrace();
        }

        //new LoginFrame().setVisible(true);*/
    }//GEN-LAST:event_formWindowClosing

    private void entrarButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_entrarButtonMouseClicked
        String usr = usuarioField.getText();
        String pass = contraField.getText();
        if (!usr.isEmpty() && !pass.isEmpty()) {
            try {
                Personaa persona = db.find(usr, pass);
                JOptionPane.showMessageDialog(null,persona.toString());
                if (persona != null) {

                    inicioSesion(persona);

                } else {
                    JOptionPane.showMessageDialog(null, "Usuario y/o contrase√±a incorrectos");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error");
            }
        }
    }//GEN-LAST:event_entrarButtonMouseClicked

    public ArrayList<Personaa> getListPersonas() {
        return listPersonas;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IniciarsesionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IniciarsesionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IniciarsesionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IniciarsesionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IniciarsesionFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField contraField;
    private org.edisoncor.gui.panel.PanelImage entrarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private org.edisoncor.gui.panel.PanelImage panelImage1;
    private org.edisoncor.gui.panel.PanelImage panelImage2;
    private org.edisoncor.gui.panel.PanelImage panelImage3;
    private org.edisoncor.gui.panel.PanelImage panelImage4;
    private org.edisoncor.gui.panel.Panel regisButton;
    private javax.swing.JTextField usuarioField;
    // End of variables declaration//GEN-END:variables
}
