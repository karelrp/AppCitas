/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto_tap;


import hola.Cita;
import hola.Persona;
import java.awt.Color;
import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author whois
 */
public class ClienteFrame extends javax.swing.JFrame {
//[85, 81]

    /**
     * Creates new form ClienteFrame
     */
    private Personaa cliente = new Personaa();
    private Personaa doctor = new Personaa();
    int indexC, indexD;
    private GridLayout grid = new GridLayout(1, 1);
    private ArrayList<Personaa> listPersonas = new ArrayList<>();
    private ArrayList<Citaa> citasReservadas = new ArrayList<>();

    public ClienteFrame() {
        initComponents();
        panelLista1.setLayout(grid);
        agregarcitabtn.setIcon(new ImageIcon("C:\\Users\\whois\\OneDrive\\Documentos\\NetBeansProject\\Proyecto_TAPPP\\src\\main\\java\\Imagenes\\muela-de-juicio (1).png"));
        combo();
        actualiza();
        JFrame IniciarsesionFrame = new JFrame();
        this.setLocationRelativeTo(null);

        IniciarsesionFrame.repaint();
        getContentPane().setBackground(new Color(230, 220, 230));
    }

    public ClienteFrame(Personaa cliente, int indexU, ArrayList<Personaa> listPersonas, ArrayList<Citaa> citasReservadas) {
        initComponents();
        panelLista1.setLayout(grid);
        this.indexC = indexU;
        this.cliente = cliente;
        this.listPersonas = listPersonas;
        this.citasReservadas=citasReservadas;
        agregarcitabtn.setIcon(new ImageIcon("C:\\Users\\whois\\OneDrive\\Documentos\\NetBeansProject\\Proyecto_TAP\\src\\main\\java\\Imagenes\\dental (1).png"));
        agregarcitabtn.setIcon(new ImageIcon("C:\\Users\\kenia\\OneDrive\\Documentos\\NetBeansProjects\\Proyecto_TAP\\src\\main\\java\\Imagenes\\muela-de-juicio (1).png"));
        combo();

        actualiza();
        this.setLocationRelativeTo(null);

        JFrame IniciarsesionFrame = new JFrame();

        IniciarsesionFrame.repaint();
        getContentPane().setBackground(new Color(180, 205, 230));
    }

    private void combo() {
        comboB.addItem("");
        for (int i = 0; i < listPersonas.size(); i++) {
            if (listPersonas.get(i).isDoctor()) {
                comboB.addItem(listPersonas.get(i).getNombre().toUpperCase() + " "
                        + listPersonas.get(i).getApellido().toUpperCase() + " (" + listPersonas.get(i).getUsuario() + ")");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelCustom1 = new org.edisoncor.gui.label.LabelCustom();
        jLabel1 = new javax.swing.JLabel();
        agregarcitabtn = new javax.swing.JButton();
        comboB = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelLista1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        labelCustom1.setText("labelCustom1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel1.setText("BIENVENIDO");

        agregarcitabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarcitabtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Selecciona el especialista:");

        jLabel3.setText("Agenda la cita");

        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Historial de citas:");

        javax.swing.GroupLayout panelLista1Layout = new javax.swing.GroupLayout(panelLista1);
        panelLista1.setLayout(panelLista1Layout);
        panelLista1Layout.setHorizontalGroup(
            panelLista1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 761, Short.MAX_VALUE)
        );
        panelLista1Layout.setVerticalGroup(
            panelLista1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 356, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panelLista1);

        jButton2.setText("ActualizaðŸ”ƒ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboB, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(agregarcitabtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)))
                        .addGap(155, 155, 155))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(agregarcitabtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarcitabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarcitabtnActionPerformed
        boolean cita = false;
        
        for (int i = 0; i < citasReservadas.size(); i++) {
            System.out.println("cliente ya: "+cliente.getUsuario());
            System.out.println("cliente: "+citasReservadas.get(i).getCliente().getUsuario());
            if (citasReservadas.get(i).getCliente().getUsuario().equals(cliente.getUsuario())) {
                JOptionPane.showMessageDialog(null, "No se puede reservar cita si ya tiene una");
                cita = true;
                break;
            }

        }
        if (!cita) {
            if (!comboB.getSelectedItem().toString().equals("")) {
                AgregaCitaFrame agregaCitaFrame = new AgregaCitaFrame(doctor, indexD, cliente, indexC, listPersonas, citasReservadas);

                agregaCitaFrame.setVisible(true);
                listPersonas = agregaCitaFrame.getListPersonas();
                actualiza();
            } else {
                JOptionPane.showMessageDialog(null, "PARA CONTINUAR INGRESE UN ESPECIALISTA");
            }
        }


    }//GEN-LAST:event_agregarcitabtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nombreDoc = comboB.getSelectedItem().toString();
        String usuarioDoc2 = "", usuarioDoc = "";
        int i;
        System.out.println("nombre doc:" + nombreDoc);
        for (i = nombreDoc.length() - 1; i > 0; i--) {

            System.out.println("char: " + nombreDoc.charAt(i));
            if (nombreDoc.charAt(i) == '(') {
                break;
            }
            if (nombreDoc.charAt(i) != ')') {

                System.out.println("char: " + nombreDoc.charAt(i));

                usuarioDoc2 = usuarioDoc2 + nombreDoc.charAt(i);
            }

        }

        for (i = usuarioDoc2.length() - 1; i >= 0; i--) {
            //System.out.println("char: " + nombreDoc.charAt(i));

            usuarioDoc = usuarioDoc + usuarioDoc2.charAt(i);
        }

        //System.out.println("Usuario doc string: " + usuarioDoc);
        for (i = 0; i < listPersonas.size(); i++) {
            if (usuarioDoc.equals(listPersonas.get(i).getUsuario())) {
                doctor = listPersonas.get(i);
                indexD = i;
                break;
            }
        }
        //System.out.println("Usuario doc Obj: " + doctor.getUsuario());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        actualiza();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void actualiza() {
        int i, j = 0, filas = 0;
        Citaa cita;
        System.out.println("");

        panelLista1.removeAll();

        //for (i = 0; i < cliente.getCitasReservadas().size(); i++) {
        for (i = 0; i < citasReservadas.size(); i++) {
            if (citasReservadas.get(i).getCliente().equals(cliente)) {
                filas++;

            }
        }
        System.out.println("filas " + filas);
        grid.setRows(filas);
        System.out.println(cliente.getUsuario());

        for (i = 0; i < citasReservadas.size(); i++) {
            if (citasReservadas.get(i).getCliente().getUsuario().equals(cliente.getUsuario())) {
                cita = citasReservadas.get(i);
                PanelCitasCliente panelCitas = new PanelCitasCliente(cita);
                panelLista1.add(panelCitas);
            }
        }

        panelLista1.updateUI();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteFrame().setVisible(true);
            }
        });
    }

    public ArrayList<Personaa> getListPersonas() {
        return listPersonas;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregarcitabtn;
    private javax.swing.JComboBox<String> comboB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private org.edisoncor.gui.label.LabelCustom labelCustom1;
    private javax.swing.JPanel panelLista1;
    // End of variables declaration//GEN-END:variables
}
